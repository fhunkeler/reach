language: node_js
node_js:
  - lts/*
branches:
  only:
  - master
env:
  global:
    - CC_TEST_REPORTER_ID=$CODECLIMATE_REPO_TOKEN
before_script:
  - cp .env.example .env.test
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
  - rm -rf .env.test
jobs:
  include:
    - stage: test
      script: yarn test
    - stage: release
      if: branch = master
      node_js: lts/*
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - yarn deploy-docs
          - yarn semantic-release


#env:
#  global:
#  - CC_TEST_REPORTER_ID=$CODECLIMATE_REPO_TOKEN
#language: node_js
#node_js:
#  - lts/*
#cache:
#  yarn: true
#  directories:
#  - node_modules
#branches:
#  except:
#  - /^v\d+\.\d+\.\d+$/
#before_script:
#  - cp .env.example .env.test
#  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#  - chmod +x ./cc-test-reporter
#  - ./cc-test-reporter before-build
#script:
#  - yarn test && if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn build; fi
#after_script:
#  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
#  - rm -f .env.test
#after_success:
#  - if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn travis-deploy-once "yarn deploy-docs"; fi
#  - if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn travis-deploy-once "yarn semantic-release"; fi

#env:
#  global:
#  - CC_TEST_REPORTER_ID=$CODECLIMATE_REPO_TOKEN
#language: node_js
#node_js:
#  - lts/*
#  - 10
## Trigger a push build on master and greenkeeper branches + PRs build on every branches
## Avoid double build on PRs (See https://github.com/travis-ci/travis-ci/issues/1147)
#branches:
#  only:
#  - master
#before_script:
#  - cp .env.example .env.test
#  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#  - chmod +x ./cc-test-reporter
#  - ./cc-test-reporter before-build
#script:
#  - npm run test
#after_success:
#  - npm run codecov
#  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
#  - rm -f .env.test
#jobs:
#  include:
#  - stage: release
#    node_js: lts/*
#    script:
#      - if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn travis-deploy-once "yarn build"; fi
#      - if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn travis-deploy-once "yarn deploy-docs"; fi
#      - if [[ $TRAVIS_BRANCH == 'master' ]]; then yarn travis-deploy-once "yarn semantic-release"; fi

#env:
#  global:
#  - CC_TEST_REPORTER_ID=$CODECLIMATE_REPO_TOKEN
#language: node_js
#node_js:
#  - 8
#  - 9
#  - lts/*
#cache: yarn
#before_script:
#  - cp .env.example .env.test
#  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#  - chmod +x ./cc-test-reporter
#  - ./cc-test-reporter before-build
#script:
#  - yarn test
#after_script:
#  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
#  - rm -f .env.test
#after_success:
#  - bash ./deploy-esdoc-gh-pages.sh
#branches:
#  except:
#    # Ignore Git tags created by semantic-release, like "v1.2.3"
#    - /^v\d+\.\d+\.\d+$/
#jobs:
#  include:
#  # Define the release stage that runs semantic-release
#  - stage: release
#    node_js: lts/*
#    # Advanced: optionally overwrite your default `script` step to skip the tests
#    # script: skip
#    deploy:
#      provider: script
#      skip_cleanup: true
#      script:
#        - yarn build
#        - yarn semantic-release
#language: node_js
#before_install:
#  - rm -rf ./node_modules ./package-lock.json
#  - npm cache clean --force
#before_script:
#  - npm prune
#script:
#  - npm run schema
#  - npm run test:coverage
#after_script:
#  - npm install -g codeclimate-test-reporter
#  - codeclimate-test-reporter < coverage/lcov.info
#after_success:
#  - npm run semantic-release
#  - bash ./deploy-esdoc-gh-pages.sh
#branches:
#  except:
#    # Ignore Git tags created by semantic-release, like "v1.2.3"
#    - /^v\d+\.\d+\.\d+$/
#addons:
#  addons:
#    sauce_connect: true
#cache:
#  directories:
#    - node_modules
